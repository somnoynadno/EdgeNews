version: "3"

services:
  backend:
    build: backend
    container_name: backend
    depends_on:
      - postgres
    env_file:
      - backend/.env
    ports:
      - 8080:8080
    restart: always
    networks:
      - default
      - internal

  frontend:
    build: frontend
    container_name: frontend
    ports:
      - 4000:4000
    restart: always
    networks:
      - default

  postgres:
    image: postgres:11
    expose:
      - 5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=edge
      - POSTGRES_USER=postgres
    volumes:
      - edge_news_data:/var/lib/postgresql/data
    restart: always
    networks:
      - internal

  prometheus:
    image: prom/prometheus:v2.1.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - backend
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9080:9090
    restart: always
    networks:
      - default

  grafana:
    image: grafana/grafana:6.7.2-ubuntu
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3210:3000
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always
    networks:
      - default

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 11111:8080
    depends_on:
      - postgres
    networks:
      - default
      - internal

networks:
  default:
  internal:
    internal: true

volumes:
  edge_news_data:
  prometheus_data:
  grafana_data:
